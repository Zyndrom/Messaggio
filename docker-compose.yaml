version: '3.8'

services:
  kafka:
    image: 'bitnami/kafka:latest'
    networks:
      - kafka-network
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    healthcheck:
      test: /kafka/bin/kafka-cluster.sh cluster-id --bootstrap-server kafka:9092 || exit 1
      interval: 1s
      timeout: 60s
      retries: 60
  messages-app:
    build: ./
    restart: always
    command: ./messages_service
    ports:
      - '8070:8080'
    networks:
      - kafka-network

    depends_on:
      db:
        condition: service_healthy
      kafka:
        condition: service_started
  db: 
    restart: always
    image: postgres:latest
    networks:
      - kafka-network
    volumes:
      - ./.database/postgres/data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: messages
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 3s
    ports:
      - '5431:5432'

networks:
  kafka-network:
    driver: bridge